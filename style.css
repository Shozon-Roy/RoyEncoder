
                <script>
                <!-- Created by Shozon Roy -->
                    (function() {
                        var decoded = decodeURIComponent(escape(atob('CiAgICA8c3R5bGU+CiAgICAgICAgOnJvb3QgewogICAgICAgICAgICAvKiBMaWdodCBUaGVtZSBDb2xvcnMgKi8KICAgICAgICAgICAgLS1wcmltYXJ5LWdyZWVuOiByZ2JhKDAsIDIyMCwgMTMwLCAxKTsKICAgICAgICAgICAgLS1zZWNvbmRhcnktZ3JlZW46IHJnYmEoMCwgMTc4LCAxMDQsIDEpOwogICAgICAgICAgICAtLWRhcmstZ3JlZW46IHJnYmEoMCwgOTIsIDY5LCAxKTsKICAgICAgICAgICAgLS1saWdodC1ncmVlbjogcmdiYSgyMzAsIDI1NSwgMjQ1LCAwLjUpOwogICAgICAgICAgICAtLXdoaXRlOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDEpOwogICAgICAgICAgICAtLWdyYXktNTA6IHJnYmEoMjQ4LCAyNTAsIDI1MiwgMSk7CiAgICAgICAgICAgIC0tZ3JheS0xMDA6IHJnYmEoMjQxLCAyNDUsIDI0OSwgMSk7CiAgICAgICAgICAgIC0tZ3JheS04MDA6IHJnYmEoMzAsIDQxLCA1OSwgMSk7CiAgICAgICAgICAgIC0tYmctY29sb3I6IHZhcigtLWdyYXktNTApOwogICAgICAgICAgICAtLXRleHQtY29sb3I6IHZhcigtLWdyYXktODAwKTsKICAgICAgICAgICAgLS1uYXYtYmc6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KTsKICAgICAgICAgICAgLS1jYXJkLWJnOiB2YXIoLS13aGl0ZSk7CiAgICAgICAgICAgIC0tYm9yZGVyLWNvbG9yOiB2YXIoLS1ncmF5LTEwMCk7CiAgICAgICAgfQoKICAgICAgICBbZGF0YS10aGVtZT0iZGFyayJdIHsKICAgICAgICAgICAgLS1wcmltYXJ5LWdyZWVuOiByZ2JhKDAsIDIyMCwgMTMwLCAwLjkpOwogICAgICAgICAgICAtLXNlY29uZGFyeS1ncmVlbjogcmdiYSgwLCAxNzgsIDEwNCwgMC45KTsKICAgICAgICAgICAgLS1saWdodC1ncmVlbjogcmdiYSgwLCA5MiwgNjksIDAuMik7CiAgICAgICAgICAgIC0tYmctY29sb3I6IHJnYmEoMTcsIDI1LCA0MCwgMSk7CiAgICAgICAgICAgIC0tdGV4dC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjkpOwogICAgICAgICAgICAtLW5hdi1iZzogcmdiYSgxNywgMjUsIDQwLCAwLjgpOwogICAgICAgICAgICAtLWNhcmQtYmc6IHJnYmEoMzAsIDQxLCA1OSwgMC43KTsKICAgICAgICAgICAgLS1ib3JkZXItY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTsKICAgICAgICB9CgogICAgICAgICogewogICAgICAgICAgICBtYXJnaW46IDA7CiAgICAgICAgICAgIHBhZGRpbmc6IDA7CiAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgICAgICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcyBlYXNlLCBjb2xvciAwLjNzIGVhc2U7CiAgICAgICAgfQoKICAgICAgICBib2R5IHsKICAgICAgICAgICAgZm9udC1mYW1pbHk6ICdQbHVzIEpha2FydGEgU2FucycsIHNhbnMtc2VyaWY7CiAgICAgICAgICAgIGJhY2tncm91bmQ6IHZhcigtLWJnLWNvbG9yKTsKICAgICAgICAgICAgbWluLWhlaWdodDogMTAwdmg7CiAgICAgICAgICAgIGNvbG9yOiB2YXIoLS10ZXh0LWNvbG9yKTsKICAgICAgICB9CgogICAgICAgIC5uYXZiYXIgewogICAgICAgICAgICBiYWNrZ3JvdW5kOiB2YXIoLS1uYXYtYmcpOwogICAgICAgICAgICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoMjBweCk7CiAgICAgICAgICAgIC13ZWJraXQtYmFja2Ryb3AtZmlsdGVyOiBibHVyKDIwcHgpOwogICAgICAgICAgICBib3gtc2hhZG93OiAwIDRweCAzMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTsKICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHZhcigtLWJvcmRlci1jb2xvcik7CiAgICAgICAgICAgIHBhZGRpbmc6IDFyZW0gMnJlbTsKICAgICAgICAgICAgcG9zaXRpb246IGZpeGVkOwogICAgICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICAgICAgdG9wOiAwOwogICAgICAgICAgICB6LWluZGV4OiAxMDAwOwogICAgICAgIH0KCiAgICAgICAgLm5hdmJhci1icmFuZCB7CiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAnQ2xhc2ggRGlzcGxheScsIHNhbnMtc2VyaWY7CiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS43NXJlbTsKICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDsKICAgICAgICAgICAgY29sb3I6IHJnYmEoMCwgMjIwLCAxMzAsIDEpOwogICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IGF1dG87CiAgICAgICAgfQogICAgICAgIC5uYXZiYXItYnJhbmQ6aG92ZXIgewogICAgICAgICAgICBmb250LWZhbWlseTogJ0NsYXNoIERpc3BsYXknLCBzYW5zLXNlcmlmOwogICAgICAgICAgICBmb250LXNpemU6IDEuNzVyZW07CiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7CiAgICAgICAgICAgIGNvbG9yOiByZ2JhKDAsIDIyMCwgMTMwLCAxKTsKICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogICAgICAgIH0KCiAgICAgICAgLm5hdi1hY3Rpb25zIHsKICAgICAgICAgICAgZGlzcGxheTogZmxleDsKICAgICAgICAgICAgZ2FwOiAxLjVyZW07CiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICAgICAgfQogICAgICAgIGF7ICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICAgICAgICAgICAgY29sb3I6IHZhcigtLXByaW1hcnktZ3JlZW4pOwogICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7CiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7fQogICAgICAgIC5uYXYtaWNvbnsKICAgICAgICAgICAgd2lkdGg6IDQwcHg7CiAgICAgICAgICAgIGhlaWdodDogNDBweDsKICAgICAgICAgICAgZGlzcGxheTogZmxleDsKICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEycHg7CiAgICAgICAgICAgIGJhY2tncm91bmQ6IHZhcigtLWxpZ2h0LWdyZWVuKTsKICAgICAgICAgICAgY29sb3I6IHZhcigtLXByaW1hcnktZ3JlZW4pOwogICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7CiAgICAgICAgfQoKICAgICAgICAubmF2LWljb246aG92ZXIgewogICAgICAgICAgICBiYWNrZ3JvdW5kOiB2YXIoLS1wcmltYXJ5LWdyZWVuKTsKICAgICAgICAgICAgY29sb3I6IHZhcigtLXdoaXRlKTsKICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0ycHgpOwogICAgICAgIH0KCiAgICAgICAgLm1haW4tY29udGFpbmVyIHsKICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAwcHg7CiAgICAgICAgICAgIG1hcmdpbjogN3JlbSBhdXRvIDJyZW07CiAgICAgICAgICAgIHBhZGRpbmc6IDJyZW07CiAgICAgICAgfQoKICAgICAgICAuZWRpdG9yLWNvbnRhaW5lciB7CiAgICAgICAgICAgIGJhY2tncm91bmQ6IHZhcigtLWNhcmQtYmcpOwogICAgICAgICAgICBib3JkZXItcmFkaXVzOiAyNHB4OwogICAgICAgICAgICBwYWRkaW5nOiAycmVtOwogICAgICAgICAgICBib3gtc2hhZG93OiAwIDIwcHggNDBweCByZ2JhKDAsIDAsIDAsIDAuMSk7CiAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWJvcmRlci1jb2xvcik7CiAgICAgICAgfQoKICAgICAgICB0ZXh0YXJlYSB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlOwogICAgICAgICAgICBtaW4taGVpZ2h0OiAyMjBweDsKICAgICAgICAgICAgcGFkZGluZzogMS4yNXJlbTsKICAgICAgICAgICAgbWFyZ2luOiAxcmVtIDA7CiAgICAgICAgICAgIGJvcmRlcjogMnB4IHNvbGlkIHZhcigtLWJvcmRlci1jb2xvcik7CiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDE2cHg7CiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAnUGx1cyBKYWthcnRhIFNhbnMnLCBtb25vc3BhY2U7CiAgICAgICAgICAgIGZvbnQtc2l6ZTogMC45NXJlbTsKICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDEuNjsKICAgICAgICAgICAgcmVzaXplOiB2ZXJ0aWNhbDsKICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTsKICAgICAgICAgICAgYmFja2dyb3VuZDogdmFyKC0tYmctY29sb3IpOwogICAgICAgICAgICBjb2xvcjogdmFyKC0tdGV4dC1jb2xvcik7CiAgICAgICAgfQoKICAgICAgICB0ZXh0YXJlYTpmb2N1cyB7CiAgICAgICAgICAgIG91dGxpbmU6IG5vbmU7CiAgICAgICAgICAgIGJvcmRlci1jb2xvcjogdmFyKC0tcHJpbWFyeS1ncmVlbik7CiAgICAgICAgICAgIGJveC1zaGFkb3c6IDAgMCAwIDRweCByZ2JhKDAsIDIyMCwgMTMwLCAwLjEpOwogICAgICAgIH0KCiAgICAgICAgLmFjdGlvbi1idXR0b25zIHsKICAgICAgICAgICAgZGlzcGxheTogZmxleDsKICAgICAgICAgICAgZ2FwOiAxcmVtOwogICAgICAgICAgICBtYXJnaW46IDJyZW0gMDsKICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgICAgICAgICAgIGZsZXgtd3JhcDogd3JhcDsKICAgICAgICB9CgogICAgICAgIC5idG4tcHJlbWl1bSB7CiAgICAgICAgICAgIHBhZGRpbmc6IDFyZW0gMnJlbTsKICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTRweDsKICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDsKICAgICAgICAgICAgZm9udC1zaXplOiAxcmVtOwogICAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlOwogICAgICAgICAgICBkaXNwbGF5OiBmbGV4OwogICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgICAgICAgICBnYXA6IDAuNXJlbTsKICAgICAgICAgICAgbWluLXdpZHRoOiAxODBweDsKICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgICAgICAgfQoKICAgICAgICAuYnRuLXByaW1hcnktcHJlbWl1bSB7CiAgICAgICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMzVkZWcsIAogICAgICAgICAgICAgICAgcmdiYSgwLCAyMjAsIDEzMCwgMSksIAogICAgICAgICAgICAgICAgcmdiYSgwLCAxNzgsIDEwNCwgMC44KSk7CiAgICAgICAgICAgIGNvbG9yOiB2YXIoLS13aGl0ZSk7CiAgICAgICAgICAgIGJvcmRlcjogbm9uZTsKICAgICAgICAgICAgYm94LXNoYWRvdzogMCAxMHB4IDIwcHggcmdiYSgwLCAyMjAsIDEzMCwgMC4yKTsKICAgICAgICB9CgogICAgICAgIC5idG4tb3V0bGluZS1wcmVtaXVtIHsKICAgICAgICAgICAgYmFja2dyb3VuZDogdmFyKC0tY2FyZC1iZyk7CiAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1wcmltYXJ5LWdyZWVuKTsKICAgICAgICAgICAgYm9yZGVyOiAycHggc29saWQgdmFyKC0tcHJpbWFyeS1ncmVlbik7CiAgICAgICAgfQoKICAgICAgICAuYnRuLW91dGxpbmUtcHJlbWl1bTpob3ZlciB7CiAgICAgICAgICAgIGJhY2tncm91bmQ6IHZhcigtLXByaW1hcnktZ3JlZW4pOwogICAgICAgICAgICBjb2xvcjogdmFyKC0td2hpdGUpOwogICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTJweCk7CiAgICAgICAgfQoKICAgICAgICAuY29weXJpZ2h0IHsKICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgICAgICAgICBwYWRkaW5nOiAycmVtOwogICAgICAgICAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jYXJkLWJnKTsKICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTZweDsKICAgICAgICAgICAgbWFyZ2luLXRvcDogMnJlbTsKICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tYm9yZGVyLWNvbG9yKTsKICAgICAgICB9CgogICAgICAgIC5jb3B5cmlnaHQgcCB7CiAgICAgICAgICAgIG1hcmdpbjogMDsKICAgICAgICAgICAgY29sb3I6IHZhcigtLXRleHQtY29sb3IpOwogICAgICAgICAgICBvcGFjaXR5OiAwLjg7CiAgICAgICAgfQoKICAgICAgICAudG9hc3Qtbm90aWZpY2F0aW9uIHsKICAgICAgICAgICAgcG9zaXRpb246IGZpeGVkOwogICAgICAgICAgICB0b3A6IDgwcHg7CiAgICAgICAgICAgIHJpZ2h0OiAyMHB4OwogICAgICAgICAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jYXJkLWJnKTsKICAgICAgICAgICAgY29sb3I6IHZhcigtLXRleHQtY29sb3IpOwogICAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMnB4OwogICAgICAgICAgICBwYWRkaW5nOiAxcmVtIDEuNXJlbTsKICAgICAgICAgICAgYm94LXNoYWRvdzogMCAxMHB4IDMwcHggcmdiYSgwLCAwLCAwLCAwLjEpOwogICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ib3JkZXItY29sb3IpOwogICAgICAgICAgICBkaXNwbGF5OiBmbGV4OwogICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgICAgICAgICBnYXA6IDAuNzVyZW07CiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAlKTsKICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuNXMgY3ViaWMtYmV6aWVyKDAuNjgsIC0wLjU1LCAwLjI2NSwgMS41NSk7CiAgICAgICAgICAgIHotaW5kZXg6IDEwMDE7CiAgICAgICAgfQoKICAgICAgICAudG9hc3Qtbm90aWZpY2F0aW9uLnNob3cgewogICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7CiAgICAgICAgfQoKICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHsKICAgICAgICAgICAgLm1haW4tY29udGFpbmVyIHsKICAgICAgICAgICAgICAgIHBhZGRpbmc6IDFyZW07CiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiA1cmVtOwogICAgICAgICAgICB9CgogICAgICAgICAgICAuYWN0aW9uLWJ1dHRvbnMgewogICAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLmJ0bi1wcmVtaXVtIHsKICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgPC9zdHlsZT4=')));
                        document.open();
                        document.write(decoded);
                        document.close();
                    })();
                </script>
            
